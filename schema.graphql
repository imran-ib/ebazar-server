### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Address {
  additionalInfo: String
  address: String!
  city: String!
  company: String
  country: String!
  id: String!
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String!
  message: String
  name: String!
  OthercontactNubmers: [String!]!
  state: String!
  streetAddress1: String
  streetAddress2: String
  User: User
  zipCode: String!
}

input AddressCreateManyWithoutSellerInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutSellerInput!]
}

input AddressCreateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutUserInput!]
}

input AddressCreateOthercontactNubmersInput {
  set: [String!]
}

input AddressCreateWithoutSellerInput {
  additionalInfo: String
  address: String!
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String!
  message: String
  name: String!
  OthercontactNubmers: AddressCreateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  User: UserCreateOneWithoutAddressInput
  zipCode: String
}

input AddressCreateWithoutUserInput {
  additionalInfo: String
  address: String!
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String!
  message: String
  name: String!
  OthercontactNubmers: AddressCreateOthercontactNubmersInput
  Seller: SellerCreateOneWithoutPickupLocationsInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressFilter {
  every: AddressWhereInput
  none: AddressWhereInput
  some: AddressWhereInput
}

input AddressScalarWhereInput {
  additionalInfo: NullableStringFilter
  address: StringFilter
  AND: [AddressScalarWhereInput!]
  city: StringFilter
  company: NullableStringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isPrimary: NullableBooleanFilter
  Lat: NullableFloatFilter
  Lng: NullableFloatFilter
  MaincontactNubmer: StringFilter
  message: NullableStringFilter
  name: StringFilter
  NOT: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  sellerId: NullableStringFilter
  state: StringFilter
  streetAddress1: NullableStringFilter
  streetAddress2: NullableStringFilter
  updatedAt: DateTimeFilter
  userId: NullableStringFilter
  zipCode: StringFilter
}

input AddressUpdateInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  Seller: SellerUpdateOneWithoutPickupLocationsInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutAddressInput
  zipCode: String
}

input AddressUpdateManyDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressUpdateManyWithoutSellerInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutSellerInput!]
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutSellerInput!]
  updateMany: [AddressUpdateManyWithWhereNestedInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutSellerInput!]
}

input AddressUpdateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutUserInput!]
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AddressUpdateManyWithWhereNestedInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutUserInput!]
}

input AddressUpdateManyWithWhereNestedInput {
  data: AddressUpdateManyDataInput!
  where: AddressScalarWhereInput!
}

input AddressUpdateOthercontactNubmersInput {
  set: [String!]
}

input AddressUpdateWithoutSellerDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutAddressInput
  zipCode: String
}

input AddressUpdateWithoutUserDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  Seller: SellerUpdateOneWithoutPickupLocationsInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressUpdateWithWhereUniqueWithoutSellerInput {
  data: AddressUpdateWithoutSellerDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpdateWithWhereUniqueWithoutUserInput {
  data: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpsertWithWhereUniqueWithoutSellerInput {
  create: AddressCreateWithoutSellerInput!
  update: AddressUpdateWithoutSellerDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpsertWithWhereUniqueWithoutUserInput {
  create: AddressCreateWithoutUserInput!
  update: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressWhereInput {
  additionalInfo: NullableStringFilter
  address: StringFilter
  AND: [AddressWhereInput!]
  city: StringFilter
  company: NullableStringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isPrimary: NullableBooleanFilter
  Lat: NullableFloatFilter
  Lng: NullableFloatFilter
  MaincontactNubmer: StringFilter
  message: NullableStringFilter
  name: StringFilter
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  Seller: SellerWhereInput
  sellerId: NullableStringFilter
  state: StringFilter
  streetAddress1: NullableStringFilter
  streetAddress2: NullableStringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: NullableStringFilter
  zipCode: StringFilter
}

input AddressWhereUniqueInput {
  id: String
}

type CartItem {
  id: String!
  item: Item!
  itemId: String!
  quantity: Int!
  user: User!
  userId: String!
}

input CartItemCreateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutItemInput!]
}

input CartItemCreateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutUserInput!]
}

input CartItemCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
  user: UserCreateOneWithoutCartInput!
}

input CartItemCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCartItemInput!
  quantity: Int
  updatedAt: DateTime
}

input CartItemFilter {
  every: CartItemWhereInput
  none: CartItemWhereInput
  some: CartItemWhereInput
}

input CartItemScalarWhereInput {
  AND: [CartItemScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [CartItemScalarWhereInput!]
  OR: [CartItemScalarWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input CartItemUpdateManyDataInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutItemInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutItemInput!]
}

input CartItemUpdateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutUserInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutUserInput!]
}

input CartItemUpdateManyWithWhereNestedInput {
  data: CartItemUpdateManyDataInput!
  where: CartItemScalarWhereInput!
}

input CartItemUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutCartInput
}

input CartItemUpdateWithoutUserDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutCartItemInput
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateWithWhereUniqueWithoutItemInput {
  data: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpdateWithWhereUniqueWithoutUserInput {
  data: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutItemInput {
  create: CartItemCreateWithoutItemInput!
  update: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutUserInput {
  create: CartItemCreateWithoutUserInput!
  update: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemWhereInput {
  AND: [CartItemWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [CartItemWhereInput!]
  OR: [CartItemWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input CartItemWhereUniqueInput {
  id: String
}

type Catagory {
  id: String!
  item: Item!
  itemId: String!
  text: String!
}

input CatagoryCreateManyWithoutItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutItemInput!]
}

input CatagoryCreateManyWithoutOrderItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutOrderItemInput!]
}

input CatagoryCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutCatagoryInput
  text: String!
  updatedAt: DateTime
}

input CatagoryCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCatagoryInput!
  text: String!
  updatedAt: DateTime
}

input CatagoryFilter {
  every: CatagoryWhereInput
  none: CatagoryWhereInput
  some: CatagoryWhereInput
}

input CatagoryScalarWhereInput {
  AND: [CatagoryScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [CatagoryScalarWhereInput!]
  OR: [CatagoryScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input CatagoryUpdateManyDataInput {
  createdAt: DateTime
  id: String
  text: String
  updatedAt: DateTime
}

input CatagoryUpdateManyWithoutItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutItemInput!]
  delete: [CatagoryWhereUniqueInput!]
  deleteMany: [CatagoryScalarWhereInput!]
  disconnect: [CatagoryWhereUniqueInput!]
  set: [CatagoryWhereUniqueInput!]
  update: [CatagoryUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [CatagoryUpdateManyWithWhereNestedInput!]
  upsert: [CatagoryUpsertWithWhereUniqueWithoutItemInput!]
}

input CatagoryUpdateManyWithoutOrderItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutOrderItemInput!]
  delete: [CatagoryWhereUniqueInput!]
  deleteMany: [CatagoryScalarWhereInput!]
  disconnect: [CatagoryWhereUniqueInput!]
  set: [CatagoryWhereUniqueInput!]
  update: [CatagoryUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [CatagoryUpdateManyWithWhereNestedInput!]
  upsert: [CatagoryUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input CatagoryUpdateManyWithWhereNestedInput {
  data: CatagoryUpdateManyDataInput!
  where: CatagoryScalarWhereInput!
}

input CatagoryUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutCatagoryInput
  text: String
  updatedAt: DateTime
}

input CatagoryUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutCatagoryInput
  text: String
  updatedAt: DateTime
}

input CatagoryUpdateWithWhereUniqueWithoutItemInput {
  data: CatagoryUpdateWithoutItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpdateWithWhereUniqueWithoutOrderItemInput {
  data: CatagoryUpdateWithoutOrderItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpsertWithWhereUniqueWithoutItemInput {
  create: CatagoryCreateWithoutItemInput!
  update: CatagoryUpdateWithoutItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpsertWithWhereUniqueWithoutOrderItemInput {
  create: CatagoryCreateWithoutOrderItemInput!
  update: CatagoryUpdateWithoutOrderItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryWhereInput {
  AND: [CatagoryWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [CatagoryWhereInput!]
  OR: [CatagoryWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input CatagoryWhereUniqueInput {
  id: String
}

type Color {
  id: String!
  item: Item!
  itemId: String!
  text: String!
}

input ColorCreateManyWithoutItemInput {
  connect: [ColorWhereUniqueInput!]
  create: [ColorCreateWithoutItemInput!]
}

input ColorCreateManyWithoutOrderItemInput {
  connect: [ColorWhereUniqueInput!]
  create: [ColorCreateWithoutOrderItemInput!]
}

input ColorCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutColorsInput
  text: String!
  updatedAt: DateTime
}

input ColorCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutColorsInput!
  text: String!
  updatedAt: DateTime
}

input ColorFilter {
  every: ColorWhereInput
  none: ColorWhereInput
  some: ColorWhereInput
}

input ColorScalarWhereInput {
  AND: [ColorScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [ColorScalarWhereInput!]
  OR: [ColorScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ColorUpdateManyDataInput {
  createdAt: DateTime
  id: String
  text: String
  updatedAt: DateTime
}

input ColorUpdateManyWithoutItemInput {
  connect: [ColorWhereUniqueInput!]
  create: [ColorCreateWithoutItemInput!]
  delete: [ColorWhereUniqueInput!]
  deleteMany: [ColorScalarWhereInput!]
  disconnect: [ColorWhereUniqueInput!]
  set: [ColorWhereUniqueInput!]
  update: [ColorUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ColorUpdateManyWithWhereNestedInput!]
  upsert: [ColorUpsertWithWhereUniqueWithoutItemInput!]
}

input ColorUpdateManyWithoutOrderItemInput {
  connect: [ColorWhereUniqueInput!]
  create: [ColorCreateWithoutOrderItemInput!]
  delete: [ColorWhereUniqueInput!]
  deleteMany: [ColorScalarWhereInput!]
  disconnect: [ColorWhereUniqueInput!]
  set: [ColorWhereUniqueInput!]
  update: [ColorUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [ColorUpdateManyWithWhereNestedInput!]
  upsert: [ColorUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input ColorUpdateManyWithWhereNestedInput {
  data: ColorUpdateManyDataInput!
  where: ColorScalarWhereInput!
}

input ColorUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutColorsInput
  text: String
  updatedAt: DateTime
}

input ColorUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutColorsInput
  text: String
  updatedAt: DateTime
}

input ColorUpdateWithWhereUniqueWithoutItemInput {
  data: ColorUpdateWithoutItemDataInput!
  where: ColorWhereUniqueInput!
}

input ColorUpdateWithWhereUniqueWithoutOrderItemInput {
  data: ColorUpdateWithoutOrderItemDataInput!
  where: ColorWhereUniqueInput!
}

input ColorUpsertWithWhereUniqueWithoutItemInput {
  create: ColorCreateWithoutItemInput!
  update: ColorUpdateWithoutItemDataInput!
  where: ColorWhereUniqueInput!
}

input ColorUpsertWithWhereUniqueWithoutOrderItemInput {
  create: ColorCreateWithoutOrderItemInput!
  update: ColorUpdateWithoutOrderItemDataInput!
  where: ColorWhereUniqueInput!
}

input ColorWhereInput {
  AND: [ColorWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [ColorWhereInput!]
  OR: [ColorWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ColorWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Item {
  beforeDiscountPrice: Float!
  brand: String
  catagory(after: CatagoryWhereUniqueInput, before: CatagoryWhereUniqueInput, first: Int, last: Int, skip: Int): [Catagory!]!
  colors(after: ColorWhereUniqueInput, before: ColorWhereUniqueInput, first: Int, last: Int, skip: Int): [Color!]!
  description: String!
  dimensions: String
  eagerImages: [String!]!
  id: String!
  images: [String!]!
  itemReview(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, skip: Int): [Review!]!
  likes(after: LikeWhereUniqueInput, before: LikeWhereUniqueInput, first: Int, last: Int, skip: Int): [Like!]!
  likesCount: Int
  materials: String
  OtherFeatures: [String!]!
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  stock: Int
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, skip: Int): [Tag!]!
  title: String!
  videoLink: String
  weight: String
}

input ItemCreateeagerImagesInput {
  set: [String!]
}

input ItemCreateimagesInput {
  set: [String!]
}

input ItemCreateManyWithoutSellerInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutSellerInput!]
}

input ItemCreateOneWithoutCartItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCartItemInput
}

input ItemCreateOneWithoutCatagoryInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCatagoryInput
}

input ItemCreateOneWithoutColorsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutColorsInput
}

input ItemCreateOneWithoutItemReviewInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutItemReviewInput
}

input ItemCreateOneWithoutLikesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutLikesInput
}

input ItemCreateOneWithoutOrderInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOrderInput
}

input ItemCreateOneWithoutTagsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutTagsInput
}

input ItemCreateOtherFeaturesInput {
  set: [String!]
}

input ItemCreateWithoutCartItemInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutCatagoryInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutColorsInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutItemReviewInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutLikesInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutOrderInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutSellerInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  stock: Int
  tags: TagCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutTagsInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemCreateeagerImagesInput
  id: String
  images: ItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderCreateManyWithoutItemInput
  OtherFeatures: ItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

input ItemOrderByInput {
  beforeDiscountPrice: OrderByArg
  brand: OrderByArg
  createdAt: OrderByArg
  description: OrderByArg
  dimensions: OrderByArg
  id: OrderByArg
  likesCount: OrderByArg
  materials: OrderByArg
  otherInfo: OrderByArg
  overview: OrderByArg
  price: OrderByArg
  reviewCount: OrderByArg
  sellerId: OrderByArg
  stock: OrderByArg
  title: OrderByArg
  updatedAt: OrderByArg
  videoLink: OrderByArg
  weight: OrderByArg
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: NullableStringFilter
  CartItem: CartItemFilter
  catagory: CatagoryFilter
  colors: ColorFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: NullableStringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: NullableIntFilter
  materials: NullableStringFilter
  NOT: [ItemScalarWhereInput!]
  OR: [ItemScalarWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: NullableStringFilter
  price: FloatFilter
  reviewCount: NullableIntFilter
  sellerId: NullableStringFilter
  stock: NullableIntFilter
  tags: TagFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: NullableStringFilter
}

input ItemUpdateeagerImagesInput {
  set: [String!]
}

input ItemUpdateimagesInput {
  set: [String!]
}

input ItemUpdateManyDataInput {
  beforeDiscountPrice: Float
  brand: String
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  likesCount: Int
  materials: String
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateManyWithoutSellerInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutSellerInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutSellerInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutSellerInput!]
}

input ItemUpdateManyWithWhereNestedInput {
  data: ItemUpdateManyDataInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateOneRequiredWithoutCartItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCartItemInput
  update: ItemUpdateWithoutCartItemDataInput
  upsert: ItemUpsertWithoutCartItemInput
}

input ItemUpdateOneRequiredWithoutCatagoryInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCatagoryInput
  update: ItemUpdateWithoutCatagoryDataInput
  upsert: ItemUpsertWithoutCatagoryInput
}

input ItemUpdateOneRequiredWithoutColorsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutColorsInput
  update: ItemUpdateWithoutColorsDataInput
  upsert: ItemUpsertWithoutColorsInput
}

input ItemUpdateOneRequiredWithoutItemReviewInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutItemReviewInput
  update: ItemUpdateWithoutItemReviewDataInput
  upsert: ItemUpsertWithoutItemReviewInput
}

input ItemUpdateOneRequiredWithoutLikesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutLikesInput
  update: ItemUpdateWithoutLikesDataInput
  upsert: ItemUpsertWithoutLikesInput
}

input ItemUpdateOneRequiredWithoutTagsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutTagsInput
  update: ItemUpdateWithoutTagsDataInput
  upsert: ItemUpsertWithoutTagsInput
}

input ItemUpdateOneWithoutOrderInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: ItemUpdateWithoutOrderDataInput
  upsert: ItemUpsertWithoutOrderInput
}

input ItemUpdateOtherFeaturesInput {
  set: [String!]
}

input ItemUpdateWithoutCartItemDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutCatagoryDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutColorsDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutItemReviewDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutLikesDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutOrderDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutSellerDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  stock: Int
  tags: TagUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutTagsDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: ItemUpdateeagerImagesInput
  id: String
  images: ItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  OtherFeatures: ItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithWhereUniqueWithoutSellerInput {
  data: ItemUpdateWithoutSellerDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithoutCartItemInput {
  create: ItemCreateWithoutCartItemInput!
  update: ItemUpdateWithoutCartItemDataInput!
}

input ItemUpsertWithoutCatagoryInput {
  create: ItemCreateWithoutCatagoryInput!
  update: ItemUpdateWithoutCatagoryDataInput!
}

input ItemUpsertWithoutColorsInput {
  create: ItemCreateWithoutColorsInput!
  update: ItemUpdateWithoutColorsDataInput!
}

input ItemUpsertWithoutItemReviewInput {
  create: ItemCreateWithoutItemReviewInput!
  update: ItemUpdateWithoutItemReviewDataInput!
}

input ItemUpsertWithoutLikesInput {
  create: ItemCreateWithoutLikesInput!
  update: ItemUpdateWithoutLikesDataInput!
}

input ItemUpsertWithoutOrderInput {
  create: ItemCreateWithoutOrderInput!
  update: ItemUpdateWithoutOrderDataInput!
}

input ItemUpsertWithoutTagsInput {
  create: ItemCreateWithoutTagsInput!
  update: ItemUpdateWithoutTagsDataInput!
}

input ItemUpsertWithWhereUniqueWithoutSellerInput {
  create: ItemCreateWithoutSellerInput!
  update: ItemUpdateWithoutSellerDataInput!
  where: ItemWhereUniqueInput!
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: NullableStringFilter
  CartItem: CartItemFilter
  catagory: CatagoryFilter
  colors: ColorFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: NullableStringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: NullableIntFilter
  materials: NullableStringFilter
  NOT: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: NullableStringFilter
  price: FloatFilter
  reviewCount: NullableIntFilter
  Seller: SellerWhereInput
  sellerId: NullableStringFilter
  stock: NullableIntFilter
  tags: TagFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: NullableStringFilter
}

input ItemWhereUniqueInput {
  id: String
}

type Like {
  id: String!
  item: Item!
  itemId: String!
  user: User!
  userId: String!
}

input LikeCreateManyWithoutItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutItemInput!]
}

input LikeCreateManyWithoutOrderItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutOrderItemInput!]
}

input LikeCreateManyWithoutUserInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutUserInput!]
}

input LikeCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutLikesInput
  updatedAt: DateTime
  user: UserCreateOneWithoutLikesInput!
}

input LikeCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutLikesInput!
  updatedAt: DateTime
  user: UserCreateOneWithoutLikesInput!
}

input LikeCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutLikesInput!
  OrderItem: OrderItemCreateOneWithoutLikesInput
  updatedAt: DateTime
}

input LikeFilter {
  every: LikeWhereInput
  none: LikeWhereInput
  some: LikeWhereInput
}

input LikeScalarWhereInput {
  AND: [LikeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [LikeScalarWhereInput!]
  OR: [LikeScalarWhereInput!]
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input LikeUpdateManyDataInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LikeUpdateManyWithoutItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutItemInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutItemInput!]
}

input LikeUpdateManyWithoutOrderItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutOrderItemInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input LikeUpdateManyWithoutUserInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutUserInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutUserInput!]
}

input LikeUpdateManyWithWhereNestedInput {
  data: LikeUpdateManyDataInput!
  where: LikeScalarWhereInput!
}

input LikeUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutLikesInput
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutLikesInput
}

input LikeUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutLikesInput
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutLikesInput
}

input LikeUpdateWithoutUserDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutLikesInput
  OrderItem: OrderItemUpdateOneWithoutLikesInput
  updatedAt: DateTime
}

input LikeUpdateWithWhereUniqueWithoutItemInput {
  data: LikeUpdateWithoutItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithWhereUniqueWithoutOrderItemInput {
  data: LikeUpdateWithoutOrderItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithWhereUniqueWithoutUserInput {
  data: LikeUpdateWithoutUserDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutItemInput {
  create: LikeCreateWithoutItemInput!
  update: LikeUpdateWithoutItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutOrderItemInput {
  create: LikeCreateWithoutOrderItemInput!
  update: LikeUpdateWithoutOrderItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutUserInput {
  create: LikeCreateWithoutUserInput!
  update: LikeUpdateWithoutUserDataInput!
  where: LikeWhereUniqueInput!
}

input LikeWhereInput {
  AND: [LikeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [LikeWhereInput!]
  OR: [LikeWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input LikeWhereUniqueInput {
  id: String
}

type Mutation {
  """Add Item To Cart"""
  AddItemToTheCart(itemId: String!, quantity: Int!): String!

  """Contact Form"""
  ContactUs(email: String!, message: String!, subject: String!): String!

  """Create New Item"""
  CreateItem(beforeDiscountPrice: Float!, brand: String, catagory: [String!], colors: [String!], description: String!, dimensions: String, eagerImages: [String!], images: [String!], materials: String, otherFeature: [String!], otherInfo: String, overview: String, price: Float!, stock: Int, tags: [String!], title: String!, videoLink: String, weight: String): Item!

  """Create Item Review"""
  CreateItemReview(itemId: String!, rating: Float!, text: String!): Review!
  CreateOrder(token: String!): String!

  """Create New Seller Account"""
  CreateSeller(AddressAddress: String!, AddressCity: String, AddressCompany: String, AddressCountry: String, AddressMaincontactNubmer: String!, AddressName: String!, AddressState: String, AddressStreetAddress1: String, AddressStreetAddress2: String, AddressZipCode: String, Brand: [String!], confirmPassword: String!, email: String!, name: String!, password: String!, sellerIdentification: String!, sellerNationality: String!, storeName: String!): Seller!

  """Create New User"""
  CreateUser(avatar: String, email: String!, name: String!, password: String!): String!

  """Create Users Address"""
  CreateUsersAddress(additionalInfo: String, address: String!, city: String!, company: String, country: String!, Lat: Float, Lng: Float, MaincontactNubmer: String!, message: String, name: String!, OthercontactNubmers: [String!], state: String!, streetAddress1: String, streetAddress2: String, zipCode: String): Address!
  DeleteCartItem(cartItemId: String!): String!

  """Delete Item"""
  DeleteItem(itemId: String!): String!
  deleteOneAddress(where: AddressWhereUniqueInput!): Address
  DeleteSellersAccount(sellerId: String!): String!
  DeleteUserAccount(userId: String!): String!
  EmptyUserCart(userId: String!): String!

  """Seller Request Email verification"""
  RequestEmailVerificationToken(email: String!): String!

  """Reset Password"""
  ResetSellerPassword(confirmPassword: String!, password: String!, token: String!): String!

  """User Reset Password"""
  ResetUserPassword(confirmPassword: String!, password: String!, token: String!): String!

  """Request A Password Reset"""
  SellerForgotPasswordRequest(email: String!): String!

  """Seller Login"""
  SellerLogin(email: String!, password: String!): String!

  """Like Or Remove Like From Item"""
  ToggleLikeItem(itemId: String!): String!

  """Toggle Primary Address"""
  TogglePrimaryAddress(addressId: String!): Address!

  """Update Item"""
  UpdateItem(beforeDiscountPrice: Float, brand: String, catagory: [String!], colors: [String!], description: String, dimensions: String, eagerImages: [String!], id: String, images: [String!], materials: String, otherFeature: [String!], otherInfo: String, overview: String, price: Float, stock: Int, tags: [String!], title: String, videoLink: String, weight: String): Item!
  updateOneAddress(data: AddressUpdateInput!, where: AddressWhereUniqueInput!): Address

  """User Request A Password Reset"""
  UserForgotPasswordRequest(email: String!): String!
  UserLogin(
    """User Email"""
    email: String!

    """User Password"""
    password: String!
  ): String!

  """Log User Out"""
  UserLogout: String!

  """Verify Seller Account"""
  VerifySeller(SellerVerificationToken: String!): String!
}

input NullableBooleanFilter {
  equals: Boolean
  not: Boolean
}

input NullableFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type Order {
  charge: String!
  id: String!
  Item: Item
  itemId: String
  items(after: OrderItemWhereUniqueInput, before: OrderItemWhereUniqueInput, first: Int, last: Int, skip: Int): [OrderItem!]!
  status: OrderStatus!
  total: Int!
  user: User!
  userId: String!
}

enum OrderByArg {
  asc
  desc
}

input OrderCreateManyWithoutItemInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemInput!]
}

input OrderCreateManyWithoutItemsInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemsInput!]
}

input OrderCreateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutUserInput!]
}

input OrderCreateWithoutItemInput {
  charge: String!
  createdAt: DateTime
  id: String
  items: OrderItemCreateManyWithoutOrderInput
  status: OrderStatus
  total: Int!
  updatedAt: DateTime
  user: UserCreateOneWithoutOrderInput!
}

input OrderCreateWithoutItemsInput {
  charge: String!
  createdAt: DateTime
  id: String
  Item: ItemCreateOneWithoutOrderInput
  status: OrderStatus
  total: Int!
  updatedAt: DateTime
  user: UserCreateOneWithoutOrderInput!
}

input OrderCreateWithoutUserInput {
  charge: String!
  createdAt: DateTime
  id: String
  Item: ItemCreateOneWithoutOrderInput
  items: OrderItemCreateManyWithoutOrderInput
  status: OrderStatus
  total: Int!
  updatedAt: DateTime
}

input OrderFilter {
  every: OrderWhereInput
  none: OrderWhereInput
  some: OrderWhereInput
}

type OrderItem {
  beforeDiscountPrice: Float!
  brand: String
  catagory(after: CatagoryWhereUniqueInput, before: CatagoryWhereUniqueInput, first: Int, last: Int, skip: Int): [Catagory!]!
  description: String!
  dimensions: String
  eagerImages: [String!]!
  id: String!
  images: [String!]!
  itemReview(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, skip: Int): [Review!]!
  likes(after: LikeWhereUniqueInput, before: LikeWhereUniqueInput, first: Int, last: Int, skip: Int): [Like!]!
  materials: String
  OtherFeatures: [String!]!
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  title: String!
  videoLink: String
  weight: String
}

input OrderItemCreateeagerImagesInput {
  set: [String!]
}

input OrderItemCreateimagesInput {
  set: [String!]
}

input OrderItemCreateManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  create: [OrderItemCreateWithoutOrderInput!]
}

input OrderItemCreateOneWithoutCatagoryInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutCatagoryInput
}

input OrderItemCreateOneWithoutColorsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutColorsInput
}

input OrderItemCreateOneWithoutItemReviewInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutItemReviewInput
}

input OrderItemCreateOneWithoutLikesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutLikesInput
}

input OrderItemCreateOneWithoutTagsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutTagsInput
}

input OrderItemCreateOtherFeaturesInput {
  set: [String!]
}

input OrderItemCreateWithoutCatagoryInput {
  beforeDiscountPrice: Float!
  brand: String
  colors: ColorCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  Order: OrderCreateManyWithoutItemsInput
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutColorsInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  Order: OrderCreateManyWithoutItemsInput
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutItemReviewInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  Order: OrderCreateManyWithoutItemsInput
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutLikesInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  materials: String
  Order: OrderCreateManyWithoutItemsInput
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutOrderInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutTagsInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemCreateeagerImagesInput
  id: String
  images: OrderItemCreateimagesInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  Order: OrderCreateManyWithoutItemsInput
  OtherFeatures: OrderItemCreateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemFilter {
  every: OrderItemWhereInput
  none: OrderItemWhereInput
  some: OrderItemWhereInput
}

input OrderItemScalarWhereInput {
  AND: [OrderItemScalarWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: NullableStringFilter
  catagory: CatagoryFilter
  colors: ColorFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: NullableStringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  materials: NullableStringFilter
  NOT: [OrderItemScalarWhereInput!]
  OR: [OrderItemScalarWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: NullableStringFilter
  price: FloatFilter
  stock: NullableIntFilter
  tags: TagFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: NullableStringFilter
}

input OrderItemUpdateeagerImagesInput {
  set: [String!]
}

input OrderItemUpdateimagesInput {
  set: [String!]
}

input OrderItemUpdateManyDataInput {
  beforeDiscountPrice: Float
  brand: String
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  materials: String
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  create: [OrderItemCreateWithoutOrderInput!]
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutOrderInput!]
  updateMany: [OrderItemUpdateManyWithWhereNestedInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutOrderInput!]
}

input OrderItemUpdateManyWithWhereNestedInput {
  data: OrderItemUpdateManyDataInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateOneWithoutCatagoryInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutCatagoryInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutCatagoryDataInput
  upsert: OrderItemUpsertWithoutCatagoryInput
}

input OrderItemUpdateOneWithoutColorsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutColorsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutColorsDataInput
  upsert: OrderItemUpsertWithoutColorsInput
}

input OrderItemUpdateOneWithoutItemReviewInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutItemReviewInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutItemReviewDataInput
  upsert: OrderItemUpsertWithoutItemReviewInput
}

input OrderItemUpdateOneWithoutLikesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutLikesInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutLikesDataInput
  upsert: OrderItemUpsertWithoutLikesInput
}

input OrderItemUpdateOneWithoutTagsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutTagsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutTagsDataInput
  upsert: OrderItemUpsertWithoutTagsInput
}

input OrderItemUpdateOtherFeaturesInput {
  set: [String!]
}

input OrderItemUpdateWithoutCatagoryDataInput {
  beforeDiscountPrice: Float
  brand: String
  colors: ColorUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  Order: OrderUpdateManyWithoutItemsInput
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutColorsDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  Order: OrderUpdateManyWithoutItemsInput
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutItemReviewDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  Order: OrderUpdateManyWithoutItemsInput
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutLikesDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  materials: String
  Order: OrderUpdateManyWithoutItemsInput
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutOrderDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutTagsDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  eagerImages: OrderItemUpdateeagerImagesInput
  id: String
  images: OrderItemUpdateimagesInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  Order: OrderUpdateManyWithoutItemsInput
  OtherFeatures: OrderItemUpdateOtherFeaturesInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithWhereUniqueWithoutOrderInput {
  data: OrderItemUpdateWithoutOrderDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithoutCatagoryInput {
  create: OrderItemCreateWithoutCatagoryInput!
  update: OrderItemUpdateWithoutCatagoryDataInput!
}

input OrderItemUpsertWithoutColorsInput {
  create: OrderItemCreateWithoutColorsInput!
  update: OrderItemUpdateWithoutColorsDataInput!
}

input OrderItemUpsertWithoutItemReviewInput {
  create: OrderItemCreateWithoutItemReviewInput!
  update: OrderItemUpdateWithoutItemReviewDataInput!
}

input OrderItemUpsertWithoutLikesInput {
  create: OrderItemCreateWithoutLikesInput!
  update: OrderItemUpdateWithoutLikesDataInput!
}

input OrderItemUpsertWithoutTagsInput {
  create: OrderItemCreateWithoutTagsInput!
  update: OrderItemUpdateWithoutTagsDataInput!
}

input OrderItemUpsertWithWhereUniqueWithoutOrderInput {
  create: OrderItemCreateWithoutOrderInput!
  update: OrderItemUpdateWithoutOrderDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: NullableStringFilter
  catagory: CatagoryFilter
  colors: ColorFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: NullableStringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  materials: NullableStringFilter
  NOT: [OrderItemWhereInput!]
  OR: [OrderItemWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: NullableStringFilter
  price: FloatFilter
  stock: NullableIntFilter
  tags: TagFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: NullableStringFilter
}

input OrderItemWhereUniqueInput {
  id: String
}

input OrderScalarWhereInput {
  AND: [OrderScalarWhereInput!]
  charge: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: NullableStringFilter
  items: OrderItemFilter
  NOT: [OrderScalarWhereInput!]
  OR: [OrderScalarWhereInput!]
  status: OrderStatus
  total: IntFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

enum OrderStatus {
  APPROVED
  DELIVERED
  ON_THE_WAY
  ONHOLD
  PENDING
}

input OrderUpdateManyDataInput {
  charge: String
  createdAt: DateTime
  id: String
  status: OrderStatus
  total: Int
  updatedAt: DateTime
}

input OrderUpdateManyWithoutItemInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutItemInput!]
}

input OrderUpdateManyWithoutItemsInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemsInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutItemsInput!]
}

input OrderUpdateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutUserInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutUserInput!]
}

input OrderUpdateManyWithWhereNestedInput {
  data: OrderUpdateManyDataInput!
  where: OrderScalarWhereInput!
}

input OrderUpdateWithoutItemDataInput {
  charge: String
  createdAt: DateTime
  id: String
  items: OrderItemUpdateManyWithoutOrderInput
  status: OrderStatus
  total: Int
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutOrderInput
}

input OrderUpdateWithoutItemsDataInput {
  charge: String
  createdAt: DateTime
  id: String
  Item: ItemUpdateOneWithoutOrderInput
  status: OrderStatus
  total: Int
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutOrderInput
}

input OrderUpdateWithoutUserDataInput {
  charge: String
  createdAt: DateTime
  id: String
  Item: ItemUpdateOneWithoutOrderInput
  items: OrderItemUpdateManyWithoutOrderInput
  status: OrderStatus
  total: Int
  updatedAt: DateTime
}

input OrderUpdateWithWhereUniqueWithoutItemInput {
  data: OrderUpdateWithoutItemDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithWhereUniqueWithoutItemsInput {
  data: OrderUpdateWithoutItemsDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithWhereUniqueWithoutUserInput {
  data: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutItemInput {
  create: OrderCreateWithoutItemInput!
  update: OrderUpdateWithoutItemDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  update: OrderUpdateWithoutItemsDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutUserInput {
  create: OrderCreateWithoutUserInput!
  update: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  charge: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  Item: ItemWhereInput
  itemId: NullableStringFilter
  items: OrderItemFilter
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  status: OrderStatus
  total: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input OrderWhereUniqueInput {
  id: String
}

enum Permission {
  ADD_ITEM
  DELETE_ITEM
  EDIT_ITEM
  NONE
  UPDATE_PERMISSION
}

type Query {
  addresses(after: AddressWhereUniqueInput, before: AddressWhereUniqueInput, first: Int, last: Int, skip: Int): [Address!]!

  """Currently Logged in Seller"""
  CurrentSeller: Seller

  """Currently Logged in User"""
  CurrentUser: User
  item(where: ItemWhereUniqueInput!): Item

  """Item Reviews"""
  ITemRevives(itemId: String!): [Review!]!
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item!]!

  """Get One Orders"""
  Order(orderId: String!): Order!
  seller(where: SellerWhereUniqueInput!): Seller
  sellers(after: SellerWhereUniqueInput, before: SellerWhereUniqueInput, first: Int, last: Int, skip: Int): [Seller!]!
  user(where: UserWhereUniqueInput!): User

  """Users Orders"""
  UserOrder: [Order!]
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
}

type Review {
  author: User!
  authorId: String!
  id: String!
  item: Item!
  itemId: String!
  rating: Float!
  text: String!
}

input ReviewCreateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
}

input ReviewCreateManyWithoutItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutItemInput!]
}

input ReviewCreateManyWithoutOrderItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutOrderItemInput!]
}

input ReviewCreateWithoutAuthorInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutItemReviewInput!
  OrderItem: OrderItemCreateOneWithoutItemReviewInput
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewCreateWithoutItemInput {
  author: UserCreateOneWithoutItemReviewInput!
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutItemReviewInput
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewCreateWithoutOrderItemInput {
  author: UserCreateOneWithoutItemReviewInput!
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutItemReviewInput!
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewFilter {
  every: ReviewWhereInput
  none: ReviewWhereInput
  some: ReviewWhereInput
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput!]
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  orderItemId: NullableStringFilter
  rating: FloatFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ReviewUpdateManyDataInput {
  createdAt: DateTime
  id: String
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReviewUpdateManyWithoutItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutItemInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutItemInput!]
}

input ReviewUpdateManyWithoutOrderItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutOrderItemInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  data: ReviewUpdateManyDataInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutItemReviewInput
  OrderItem: OrderItemUpdateOneWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithoutItemDataInput {
  author: UserUpdateOneRequiredWithoutItemReviewInput
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithoutOrderItemDataInput {
  author: UserUpdateOneRequiredWithoutItemReviewInput
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutItemInput {
  data: ReviewUpdateWithoutItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutOrderItemInput {
  data: ReviewUpdateWithoutOrderItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutItemInput {
  create: ReviewCreateWithoutItemInput!
  update: ReviewUpdateWithoutItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutOrderItemInput {
  create: ReviewCreateWithoutOrderItemInput!
  update: ReviewUpdateWithoutOrderItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput!]
  author: UserWhereInput
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  rating: FloatFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ReviewWhereUniqueInput {
  id: String
}

enum Role {
  ADMIN
  SELLER
  USER
}

type Seller {
  Brand: [String!]!
  email: String!
  EmailIsVerified: Boolean
  id: String!
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int, skip: Int): [Item!]!
  name: String!
  permissions: Permission
  phone: [String!]!
  PickupLocations(after: AddressWhereUniqueInput, before: AddressWhereUniqueInput, first: Int, last: Int, skip: Int): [Address!]!
  role: Role
  sellerIdentification: String!
  SellerItemsCout: Int
  sellerNationality: String!
  storeName: String!
}

input SellerCreateBrandInput {
  set: [String!]
}

input SellerCreateOneWithoutItemsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutItemsInput
}

input SellerCreateOneWithoutPickupLocationsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutPickupLocationsInput
}

input SellerCreatephoneInput {
  set: [String!]
}

input SellerCreateWithoutItemsInput {
  Brand: SellerCreateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String!
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  name: String!
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  phone: SellerCreatephoneInput
  PickupLocations: AddressCreateManyWithoutSellerInput
  role: Role
  sellerIdentification: String!
  SellerItemsCout: Int
  sellerNationality: String!
  storeName: String!
  updatedAt: DateTime
}

input SellerCreateWithoutPickupLocationsInput {
  Brand: SellerCreateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String!
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  items: ItemCreateManyWithoutSellerInput
  name: String!
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  phone: SellerCreatephoneInput
  role: Role
  sellerIdentification: String!
  SellerItemsCout: Int
  sellerNationality: String!
  storeName: String!
  updatedAt: DateTime
}

input SellerUpdateBrandInput {
  set: [String!]
}

input SellerUpdateOneWithoutItemsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  update: SellerUpdateWithoutItemsDataInput
  upsert: SellerUpsertWithoutItemsInput
}

input SellerUpdateOneWithoutPickupLocationsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutPickupLocationsInput
  delete: Boolean
  disconnect: Boolean
  update: SellerUpdateWithoutPickupLocationsDataInput
  upsert: SellerUpsertWithoutPickupLocationsInput
}

input SellerUpdatephoneInput {
  set: [String!]
}

input SellerUpdateWithoutItemsDataInput {
  Brand: SellerUpdateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  phone: SellerUpdatephoneInput
  PickupLocations: AddressUpdateManyWithoutSellerInput
  role: Role
  sellerIdentification: String
  SellerItemsCout: Int
  sellerNationality: String
  storeName: String
  updatedAt: DateTime
}

input SellerUpdateWithoutPickupLocationsDataInput {
  Brand: SellerUpdateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  items: ItemUpdateManyWithoutSellerInput
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  phone: SellerUpdatephoneInput
  role: Role
  sellerIdentification: String
  SellerItemsCout: Int
  sellerNationality: String
  storeName: String
  updatedAt: DateTime
}

input SellerUpsertWithoutItemsInput {
  create: SellerCreateWithoutItemsInput!
  update: SellerUpdateWithoutItemsDataInput!
}

input SellerUpsertWithoutPickupLocationsInput {
  create: SellerCreateWithoutPickupLocationsInput!
  update: SellerUpdateWithoutPickupLocationsDataInput!
}

input SellerWhereInput {
  AND: [SellerWhereInput!]
  confirmPassword: NullableStringFilter
  createdAt: DateTimeFilter
  email: StringFilter
  EmailIsVerified: NullableBooleanFilter
  EmailVarificationHash: NullableStringFilter
  id: StringFilter
  items: ItemFilter
  name: StringFilter
  NOT: [SellerWhereInput!]
  OR: [SellerWhereInput!]
  password: StringFilter
  PasswordResetToken: NullableStringFilter
  PasswordResetTokenExpiry: NullableFloatFilter
  permissions: Permission
  PickupLocations: AddressFilter
  role: Role
  sellerIdentification: StringFilter
  SellerItemsCout: NullableIntFilter
  sellerNationality: StringFilter
  storeName: StringFilter
  updatedAt: DateTimeFilter
}

input SellerWhereUniqueInput {
  email: String
  id: String
  phone: [String!]
  sellerIdentification: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type Tag {
  id: String!
  item: Item!
  itemId: String!
  text: String!
}

input TagCreateManyWithoutItemInput {
  connect: [TagWhereUniqueInput!]
  create: [TagCreateWithoutItemInput!]
}

input TagCreateManyWithoutOrderItemInput {
  connect: [TagWhereUniqueInput!]
  create: [TagCreateWithoutOrderItemInput!]
}

input TagCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutTagsInput
  text: String!
  updatedAt: DateTime
}

input TagCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutTagsInput!
  text: String!
  updatedAt: DateTime
}

input TagFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input TagUpdateManyDataInput {
  createdAt: DateTime
  id: String
  text: String
  updatedAt: DateTime
}

input TagUpdateManyWithoutItemInput {
  connect: [TagWhereUniqueInput!]
  create: [TagCreateWithoutItemInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutItemInput!]
}

input TagUpdateManyWithoutOrderItemInput {
  connect: [TagWhereUniqueInput!]
  create: [TagCreateWithoutOrderItemInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input TagUpdateManyWithWhereNestedInput {
  data: TagUpdateManyDataInput!
  where: TagScalarWhereInput!
}

input TagUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutTagsInput
  text: String
  updatedAt: DateTime
}

input TagUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutTagsInput
  text: String
  updatedAt: DateTime
}

input TagUpdateWithWhereUniqueWithoutItemInput {
  data: TagUpdateWithoutItemDataInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutOrderItemInput {
  data: TagUpdateWithoutOrderItemDataInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutItemInput {
  create: TagCreateWithoutItemInput!
  update: TagUpdateWithoutItemDataInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutOrderItemInput {
  create: TagCreateWithoutOrderItemInput!
  update: TagUpdateWithoutOrderItemDataInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input TagWhereUniqueInput {
  id: String
}

type User {
  address(after: AddressWhereUniqueInput, before: AddressWhereUniqueInput, first: Int, last: Int, skip: Int): [Address!]!
  avatar: String
  cart(after: CartItemWhereUniqueInput, before: CartItemWhereUniqueInput, first: Int, last: Int, skip: Int): [CartItem!]!
  email: String!
  id: String!
  itemReview(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, skip: Int): [Review!]!
  likes(after: LikeWhereUniqueInput, before: LikeWhereUniqueInput, first: Int, last: Int, skip: Int): [Like!]!
  likesCount: Int
  name: String!
  Order(after: OrderWhereUniqueInput, before: OrderWhereUniqueInput, first: Int, last: Int, skip: Int): [Order!]!
  permissions: Permission
  reviewCount: Int
  role: Role
}

input UserCreateOneWithoutAddressInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAddressInput
}

input UserCreateOneWithoutCartInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCartInput
}

input UserCreateOneWithoutItemReviewInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemReviewInput
}

input UserCreateOneWithoutLikesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLikesInput
}

input UserCreateOneWithoutOrderInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOrderInput
}

input UserCreateWithoutAddressInput {
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutCartInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutItemReviewInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutLikesInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likesCount: Int
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutOrderInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int
  name: String!
  password: String!
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateOneRequiredWithoutCartInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCartInput
  update: UserUpdateWithoutCartDataInput
  upsert: UserUpsertWithoutCartInput
}

input UserUpdateOneRequiredWithoutItemReviewInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemReviewInput
  update: UserUpdateWithoutItemReviewDataInput
  upsert: UserUpsertWithoutItemReviewInput
}

input UserUpdateOneRequiredWithoutLikesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLikesInput
  update: UserUpdateWithoutLikesDataInput
  upsert: UserUpsertWithoutLikesInput
}

input UserUpdateOneRequiredWithoutOrderInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOrderInput
  update: UserUpdateWithoutOrderDataInput
  upsert: UserUpsertWithoutOrderInput
}

input UserUpdateOneWithoutAddressInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAddressInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutAddressDataInput
  upsert: UserUpsertWithoutAddressInput
}

input UserUpdateWithoutAddressDataInput {
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutCartDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutItemReviewDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutLikesDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutOrderDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: Permission
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpsertWithoutAddressInput {
  create: UserCreateWithoutAddressInput!
  update: UserUpdateWithoutAddressDataInput!
}

input UserUpsertWithoutCartInput {
  create: UserCreateWithoutCartInput!
  update: UserUpdateWithoutCartDataInput!
}

input UserUpsertWithoutItemReviewInput {
  create: UserCreateWithoutItemReviewInput!
  update: UserUpdateWithoutItemReviewDataInput!
}

input UserUpsertWithoutLikesInput {
  create: UserCreateWithoutLikesInput!
  update: UserUpdateWithoutLikesDataInput!
}

input UserUpsertWithoutOrderInput {
  create: UserCreateWithoutOrderInput!
  update: UserUpdateWithoutOrderDataInput!
}

input UserWhereInput {
  address: AddressFilter
  AND: [UserWhereInput!]
  avatar: NullableStringFilter
  cart: CartItemFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: NullableIntFilter
  name: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Order: OrderFilter
  password: StringFilter
  PasswordResetToken: NullableStringFilter
  PasswordResetTokenExpiry: NullableFloatFilter
  permissions: Permission
  reviewCount: NullableIntFilter
  role: Role
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
