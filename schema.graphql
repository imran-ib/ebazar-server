### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input AddressCreateManyWithoutSellerInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutSellerInput!]
}

input AddressCreateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutUserInput!]
}

input AddressCreateOthercontactNubmersInput {
  set: [String!]
}

input AddressCreateWithoutSellerInput {
  additionalInfo: String
  address: String!
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String!
  message: String
  name: String!
  OthercontactNubmers: AddressCreateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  User: UserCreateOneWithoutAddressInput
  zipCode: String
}

input AddressCreateWithoutUserInput {
  additionalInfo: String
  address: String!
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String!
  message: String
  name: String!
  OthercontactNubmers: AddressCreateOthercontactNubmersInput
  Seller: SellerCreateOneWithoutPickupLocationsInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressFilter {
  every: AddressWhereInput
  none: AddressWhereInput
  some: AddressWhereInput
}

input AddressScalarWhereInput {
  additionalInfo: NullableStringFilter
  address: StringFilter
  AND: [AddressScalarWhereInput!]
  city: StringFilter
  company: NullableStringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isPrimary: BooleanFilter
  Lat: FloatFilter
  Lng: FloatFilter
  MaincontactNubmer: StringFilter
  message: NullableStringFilter
  name: StringFilter
  NOT: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  sellerId: NullableStringFilter
  state: StringFilter
  streetAddress1: NullableStringFilter
  streetAddress2: NullableStringFilter
  updatedAt: DateTimeFilter
  userId: NullableStringFilter
  zipCode: StringFilter
}

input AddressUpdateManyDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressUpdateManyWithoutSellerInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutSellerInput!]
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutSellerInput!]
  updateMany: [AddressUpdateManyWithWhereNestedInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutSellerInput!]
}

input AddressUpdateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  create: [AddressCreateWithoutUserInput!]
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AddressUpdateManyWithWhereNestedInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutUserInput!]
}

input AddressUpdateManyWithWhereNestedInput {
  data: AddressUpdateManyDataInput!
  where: AddressScalarWhereInput!
}

input AddressUpdateOthercontactNubmersInput {
  set: [String!]
}

input AddressUpdateWithoutSellerDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutAddressInput
  zipCode: String
}

input AddressUpdateWithoutUserDataInput {
  additionalInfo: String
  address: String
  city: String
  company: String
  country: String
  createdAt: DateTime
  id: String
  isPrimary: Boolean
  Lat: Float
  Lng: Float
  MaincontactNubmer: String
  message: String
  name: String
  OthercontactNubmers: AddressUpdateOthercontactNubmersInput
  Seller: SellerUpdateOneWithoutPickupLocationsInput
  state: String
  streetAddress1: String
  streetAddress2: String
  updatedAt: DateTime
  zipCode: String
}

input AddressUpdateWithWhereUniqueWithoutSellerInput {
  data: AddressUpdateWithoutSellerDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpdateWithWhereUniqueWithoutUserInput {
  data: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpsertWithWhereUniqueWithoutSellerInput {
  create: AddressCreateWithoutSellerInput!
  update: AddressUpdateWithoutSellerDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpsertWithWhereUniqueWithoutUserInput {
  create: AddressCreateWithoutUserInput!
  update: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressWhereInput {
  additionalInfo: NullableStringFilter
  address: StringFilter
  AND: [AddressWhereInput!]
  city: StringFilter
  company: NullableStringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isPrimary: BooleanFilter
  Lat: FloatFilter
  Lng: FloatFilter
  MaincontactNubmer: StringFilter
  message: NullableStringFilter
  name: StringFilter
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  Seller: SellerWhereInput
  sellerId: NullableStringFilter
  state: StringFilter
  streetAddress1: NullableStringFilter
  streetAddress2: NullableStringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: NullableStringFilter
  zipCode: StringFilter
}

input AddressWhereUniqueInput {
  id: String
}

input BooleanFilter {
  equals: Boolean
  not: Boolean
}

input CartItemCreateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutItemInput!]
}

input CartItemCreateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutUserInput!]
}

input CartItemCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
  user: UserCreateOneWithoutCartInput!
}

input CartItemCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCartItemInput!
  quantity: Int
  updatedAt: DateTime
}

input CartItemFilter {
  every: CartItemWhereInput
  none: CartItemWhereInput
  some: CartItemWhereInput
}

input CartItemScalarWhereInput {
  AND: [CartItemScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [CartItemScalarWhereInput!]
  OR: [CartItemScalarWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input CartItemUpdateManyDataInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutItemInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutItemInput!]
}

input CartItemUpdateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  create: [CartItemCreateWithoutUserInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutUserInput!]
}

input CartItemUpdateManyWithWhereNestedInput {
  data: CartItemUpdateManyDataInput!
  where: CartItemScalarWhereInput!
}

input CartItemUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutCartInput
}

input CartItemUpdateWithoutUserDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutCartItemInput
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateWithWhereUniqueWithoutItemInput {
  data: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpdateWithWhereUniqueWithoutUserInput {
  data: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutItemInput {
  create: CartItemCreateWithoutItemInput!
  update: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutUserInput {
  create: CartItemCreateWithoutUserInput!
  update: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemWhereInput {
  AND: [CartItemWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [CartItemWhereInput!]
  OR: [CartItemWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input CartItemWhereUniqueInput {
  id: String
}

input CatagoryCreateManyWithoutItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutItemInput!]
}

input CatagoryCreateManyWithoutOrderItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutOrderItemInput!]
}

input CatagoryCreateWithoutItemInput {
  id: String
  OrderItem: OrderItemCreateOneWithoutCatagoryInput
  text: String!
}

input CatagoryCreateWithoutOrderItemInput {
  id: String
  item: ItemCreateOneWithoutCatagoryInput!
  text: String!
}

input CatagoryFilter {
  every: CatagoryWhereInput
  none: CatagoryWhereInput
  some: CatagoryWhereInput
}

input CatagoryScalarWhereInput {
  AND: [CatagoryScalarWhereInput!]
  id: StringFilter
  itemId: StringFilter
  NOT: [CatagoryScalarWhereInput!]
  OR: [CatagoryScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
}

input CatagoryUpdateManyDataInput {
  id: String
  text: String
}

input CatagoryUpdateManyWithoutItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutItemInput!]
  delete: [CatagoryWhereUniqueInput!]
  deleteMany: [CatagoryScalarWhereInput!]
  disconnect: [CatagoryWhereUniqueInput!]
  set: [CatagoryWhereUniqueInput!]
  update: [CatagoryUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [CatagoryUpdateManyWithWhereNestedInput!]
  upsert: [CatagoryUpsertWithWhereUniqueWithoutItemInput!]
}

input CatagoryUpdateManyWithoutOrderItemInput {
  connect: [CatagoryWhereUniqueInput!]
  create: [CatagoryCreateWithoutOrderItemInput!]
  delete: [CatagoryWhereUniqueInput!]
  deleteMany: [CatagoryScalarWhereInput!]
  disconnect: [CatagoryWhereUniqueInput!]
  set: [CatagoryWhereUniqueInput!]
  update: [CatagoryUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [CatagoryUpdateManyWithWhereNestedInput!]
  upsert: [CatagoryUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input CatagoryUpdateManyWithWhereNestedInput {
  data: CatagoryUpdateManyDataInput!
  where: CatagoryScalarWhereInput!
}

input CatagoryUpdateWithoutItemDataInput {
  id: String
  OrderItem: OrderItemUpdateOneWithoutCatagoryInput
  text: String
}

input CatagoryUpdateWithoutOrderItemDataInput {
  id: String
  item: ItemUpdateOneRequiredWithoutCatagoryInput
  text: String
}

input CatagoryUpdateWithWhereUniqueWithoutItemInput {
  data: CatagoryUpdateWithoutItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpdateWithWhereUniqueWithoutOrderItemInput {
  data: CatagoryUpdateWithoutOrderItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpsertWithWhereUniqueWithoutItemInput {
  create: CatagoryCreateWithoutItemInput!
  update: CatagoryUpdateWithoutItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryUpsertWithWhereUniqueWithoutOrderItemInput {
  create: CatagoryCreateWithoutOrderItemInput!
  update: CatagoryUpdateWithoutOrderItemDataInput!
  where: CatagoryWhereUniqueInput!
}

input CatagoryWhereInput {
  AND: [CatagoryWhereInput!]
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [CatagoryWhereInput!]
  OR: [CatagoryWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
}

input CatagoryWhereUniqueInput {
  id: String
}

input ColorsCreateManyWithoutItemInput {
  connect: [ColorsWhereUniqueInput!]
  create: [ColorsCreateWithoutItemInput!]
}

input ColorsCreateManyWithoutOrderItemInput {
  connect: [ColorsWhereUniqueInput!]
  create: [ColorsCreateWithoutOrderItemInput!]
}

input ColorsCreateWithoutItemInput {
  id: String
  OrderItem: OrderItemCreateOneWithoutColorsInput
  text: String!
}

input ColorsCreateWithoutOrderItemInput {
  id: String
  item: ItemCreateOneWithoutColorsInput!
  text: String!
}

input ColorsFilter {
  every: ColorsWhereInput
  none: ColorsWhereInput
  some: ColorsWhereInput
}

input ColorsScalarWhereInput {
  AND: [ColorsScalarWhereInput!]
  id: StringFilter
  itemId: StringFilter
  NOT: [ColorsScalarWhereInput!]
  OR: [ColorsScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
}

input ColorsUpdateManyDataInput {
  id: String
  text: String
}

input ColorsUpdateManyWithoutItemInput {
  connect: [ColorsWhereUniqueInput!]
  create: [ColorsCreateWithoutItemInput!]
  delete: [ColorsWhereUniqueInput!]
  deleteMany: [ColorsScalarWhereInput!]
  disconnect: [ColorsWhereUniqueInput!]
  set: [ColorsWhereUniqueInput!]
  update: [ColorsUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ColorsUpdateManyWithWhereNestedInput!]
  upsert: [ColorsUpsertWithWhereUniqueWithoutItemInput!]
}

input ColorsUpdateManyWithoutOrderItemInput {
  connect: [ColorsWhereUniqueInput!]
  create: [ColorsCreateWithoutOrderItemInput!]
  delete: [ColorsWhereUniqueInput!]
  deleteMany: [ColorsScalarWhereInput!]
  disconnect: [ColorsWhereUniqueInput!]
  set: [ColorsWhereUniqueInput!]
  update: [ColorsUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [ColorsUpdateManyWithWhereNestedInput!]
  upsert: [ColorsUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input ColorsUpdateManyWithWhereNestedInput {
  data: ColorsUpdateManyDataInput!
  where: ColorsScalarWhereInput!
}

input ColorsUpdateWithoutItemDataInput {
  id: String
  OrderItem: OrderItemUpdateOneWithoutColorsInput
  text: String
}

input ColorsUpdateWithoutOrderItemDataInput {
  id: String
  item: ItemUpdateOneRequiredWithoutColorsInput
  text: String
}

input ColorsUpdateWithWhereUniqueWithoutItemInput {
  data: ColorsUpdateWithoutItemDataInput!
  where: ColorsWhereUniqueInput!
}

input ColorsUpdateWithWhereUniqueWithoutOrderItemInput {
  data: ColorsUpdateWithoutOrderItemDataInput!
  where: ColorsWhereUniqueInput!
}

input ColorsUpsertWithWhereUniqueWithoutItemInput {
  create: ColorsCreateWithoutItemInput!
  update: ColorsUpdateWithoutItemDataInput!
  where: ColorsWhereUniqueInput!
}

input ColorsUpsertWithWhereUniqueWithoutOrderItemInput {
  create: ColorsCreateWithoutOrderItemInput!
  update: ColorsUpdateWithoutOrderItemDataInput!
  where: ColorsWhereUniqueInput!
}

input ColorsWhereInput {
  AND: [ColorsWhereInput!]
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [ColorsWhereInput!]
  OR: [ColorsWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
}

input ColorsWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input ItemCreateManyWithoutSellerInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutSellerInput!]
}

input ItemCreateOneWithoutCartItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCartItemInput
}

input ItemCreateOneWithoutCatagoryInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCatagoryInput
}

input ItemCreateOneWithoutColorsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutColorsInput
}

input ItemCreateOneWithoutImagesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutImagesInput
}

input ItemCreateOneWithoutItemReviewInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutItemReviewInput
}

input ItemCreateOneWithoutLikesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutLikesInput
}

input ItemCreateOneWithoutOherFeaturesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOherFeaturesInput
}

input ItemCreateOneWithoutOrderInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOrderInput
}

input ItemCreateOneWithoutTagsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutTagsInput
}

input ItemCreateWithoutCartItemInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutCatagoryInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutColorsInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutImagesInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutItemReviewInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutLikesInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutOherFeaturesInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutOrderInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutSellerInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  stock: Int
  tags: TagsCreateManyWithoutItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemCreateWithoutTagsInput {
  beforeDiscountPrice: Float!
  brand: String
  CartItem: CartItemCreateManyWithoutItemInput
  catagory: CatagoryCreateManyWithoutItemInput
  colors: ColorsCreateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutItemInput
  itemReview: ReviewCreateManyWithoutItemInput
  likes: LikeCreateManyWithoutItemInput
  likesCount: Int!
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutItemInput
  Order: OrderCreateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float!
  reviewCount: Int!
  Seller: SellerCreateOneWithoutItemsInput
  stock: Int
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

input ItemImageCreateManyWithoutItemInput {
  connect: [ItemImageWhereUniqueInput!]
  create: [ItemImageCreateWithoutItemInput!]
}

input ItemImageCreateManyWithoutOrderItemInput {
  connect: [ItemImageWhereUniqueInput!]
  create: [ItemImageCreateWithoutOrderItemInput!]
}

input ItemImageCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  largeUrl: String
  OrderItem: OrderItemCreateOneWithoutImagesInput
  updatedAt: DateTime
  url: String!
}

input ItemImageCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutImagesInput!
  largeUrl: String
  updatedAt: DateTime
  url: String!
}

input ItemImageFilter {
  every: ItemImageWhereInput
  none: ItemImageWhereInput
  some: ItemImageWhereInput
}

input ItemImageScalarWhereInput {
  AND: [ItemImageScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  largeUrl: NullableStringFilter
  NOT: [ItemImageScalarWhereInput!]
  OR: [ItemImageScalarWhereInput!]
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input ItemImageUpdateManyDataInput {
  createdAt: DateTime
  id: String
  largeUrl: String
  updatedAt: DateTime
  url: String
}

input ItemImageUpdateManyWithoutItemInput {
  connect: [ItemImageWhereUniqueInput!]
  create: [ItemImageCreateWithoutItemInput!]
  delete: [ItemImageWhereUniqueInput!]
  deleteMany: [ItemImageScalarWhereInput!]
  disconnect: [ItemImageWhereUniqueInput!]
  set: [ItemImageWhereUniqueInput!]
  update: [ItemImageUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ItemImageUpdateManyWithWhereNestedInput!]
  upsert: [ItemImageUpsertWithWhereUniqueWithoutItemInput!]
}

input ItemImageUpdateManyWithoutOrderItemInput {
  connect: [ItemImageWhereUniqueInput!]
  create: [ItemImageCreateWithoutOrderItemInput!]
  delete: [ItemImageWhereUniqueInput!]
  deleteMany: [ItemImageScalarWhereInput!]
  disconnect: [ItemImageWhereUniqueInput!]
  set: [ItemImageWhereUniqueInput!]
  update: [ItemImageUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [ItemImageUpdateManyWithWhereNestedInput!]
  upsert: [ItemImageUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input ItemImageUpdateManyWithWhereNestedInput {
  data: ItemImageUpdateManyDataInput!
  where: ItemImageScalarWhereInput!
}

input ItemImageUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  largeUrl: String
  OrderItem: OrderItemUpdateOneWithoutImagesInput
  updatedAt: DateTime
  url: String
}

input ItemImageUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutImagesInput
  largeUrl: String
  updatedAt: DateTime
  url: String
}

input ItemImageUpdateWithWhereUniqueWithoutItemInput {
  data: ItemImageUpdateWithoutItemDataInput!
  where: ItemImageWhereUniqueInput!
}

input ItemImageUpdateWithWhereUniqueWithoutOrderItemInput {
  data: ItemImageUpdateWithoutOrderItemDataInput!
  where: ItemImageWhereUniqueInput!
}

input ItemImageUpsertWithWhereUniqueWithoutItemInput {
  create: ItemImageCreateWithoutItemInput!
  update: ItemImageUpdateWithoutItemDataInput!
  where: ItemImageWhereUniqueInput!
}

input ItemImageUpsertWithWhereUniqueWithoutOrderItemInput {
  create: ItemImageCreateWithoutOrderItemInput!
  update: ItemImageUpdateWithoutOrderItemDataInput!
  where: ItemImageWhereUniqueInput!
}

input ItemImageWhereInput {
  AND: [ItemImageWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  largeUrl: NullableStringFilter
  NOT: [ItemImageWhereInput!]
  OR: [ItemImageWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input ItemImageWhereUniqueInput {
  id: String
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: StringFilter
  CartItem: CartItemFilter
  catagory: CatagoryFilter
  colors: ColorsFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: StringFilter
  id: StringFilter
  images: ItemImageFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: IntFilter
  materials: StringFilter
  NOT: [ItemScalarWhereInput!]
  oherFeatures: OherFeaturesFilter
  OR: [ItemScalarWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: StringFilter
  price: FloatFilter
  reviewCount: IntFilter
  sellerId: NullableStringFilter
  stock: IntFilter
  tags: TagsFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: StringFilter
}

input ItemUpdateManyDataInput {
  beforeDiscountPrice: Float
  brand: String
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  likesCount: Int
  materials: String
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateManyWithoutSellerInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutSellerInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutSellerInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutSellerInput!]
}

input ItemUpdateManyWithWhereNestedInput {
  data: ItemUpdateManyDataInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateOneRequiredWithoutCartItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCartItemInput
  update: ItemUpdateWithoutCartItemDataInput
  upsert: ItemUpsertWithoutCartItemInput
}

input ItemUpdateOneRequiredWithoutCatagoryInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCatagoryInput
  update: ItemUpdateWithoutCatagoryDataInput
  upsert: ItemUpsertWithoutCatagoryInput
}

input ItemUpdateOneRequiredWithoutColorsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutColorsInput
  update: ItemUpdateWithoutColorsDataInput
  upsert: ItemUpsertWithoutColorsInput
}

input ItemUpdateOneRequiredWithoutImagesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutImagesInput
  update: ItemUpdateWithoutImagesDataInput
  upsert: ItemUpsertWithoutImagesInput
}

input ItemUpdateOneRequiredWithoutItemReviewInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutItemReviewInput
  update: ItemUpdateWithoutItemReviewDataInput
  upsert: ItemUpsertWithoutItemReviewInput
}

input ItemUpdateOneRequiredWithoutLikesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutLikesInput
  update: ItemUpdateWithoutLikesDataInput
  upsert: ItemUpsertWithoutLikesInput
}

input ItemUpdateOneRequiredWithoutOherFeaturesInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOherFeaturesInput
  update: ItemUpdateWithoutOherFeaturesDataInput
  upsert: ItemUpsertWithoutOherFeaturesInput
}

input ItemUpdateOneRequiredWithoutOrderInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOrderInput
  update: ItemUpdateWithoutOrderDataInput
  upsert: ItemUpsertWithoutOrderInput
}

input ItemUpdateOneRequiredWithoutTagsInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutTagsInput
  update: ItemUpdateWithoutTagsDataInput
  upsert: ItemUpsertWithoutTagsInput
}

input ItemUpdateWithoutCartItemDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutCatagoryDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutColorsDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutImagesDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutItemReviewDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutLikesDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutOherFeaturesDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutOrderDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutSellerDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  stock: Int
  tags: TagsUpdateManyWithoutItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithoutTagsDataInput {
  beforeDiscountPrice: Float
  brand: String
  CartItem: CartItemUpdateManyWithoutItemInput
  catagory: CatagoryUpdateManyWithoutItemInput
  colors: ColorsUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutItemInput
  itemReview: ReviewUpdateManyWithoutItemInput
  likes: LikeUpdateManyWithoutItemInput
  likesCount: Int
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutItemInput
  Order: OrderUpdateManyWithoutItemInput
  otherInfo: String
  overview: String
  price: Float
  reviewCount: Int
  Seller: SellerUpdateOneWithoutItemsInput
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input ItemUpdateWithWhereUniqueWithoutSellerInput {
  data: ItemUpdateWithoutSellerDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithoutCartItemInput {
  create: ItemCreateWithoutCartItemInput!
  update: ItemUpdateWithoutCartItemDataInput!
}

input ItemUpsertWithoutCatagoryInput {
  create: ItemCreateWithoutCatagoryInput!
  update: ItemUpdateWithoutCatagoryDataInput!
}

input ItemUpsertWithoutColorsInput {
  create: ItemCreateWithoutColorsInput!
  update: ItemUpdateWithoutColorsDataInput!
}

input ItemUpsertWithoutImagesInput {
  create: ItemCreateWithoutImagesInput!
  update: ItemUpdateWithoutImagesDataInput!
}

input ItemUpsertWithoutItemReviewInput {
  create: ItemCreateWithoutItemReviewInput!
  update: ItemUpdateWithoutItemReviewDataInput!
}

input ItemUpsertWithoutLikesInput {
  create: ItemCreateWithoutLikesInput!
  update: ItemUpdateWithoutLikesDataInput!
}

input ItemUpsertWithoutOherFeaturesInput {
  create: ItemCreateWithoutOherFeaturesInput!
  update: ItemUpdateWithoutOherFeaturesDataInput!
}

input ItemUpsertWithoutOrderInput {
  create: ItemCreateWithoutOrderInput!
  update: ItemUpdateWithoutOrderDataInput!
}

input ItemUpsertWithoutTagsInput {
  create: ItemCreateWithoutTagsInput!
  update: ItemUpdateWithoutTagsDataInput!
}

input ItemUpsertWithWhereUniqueWithoutSellerInput {
  create: ItemCreateWithoutSellerInput!
  update: ItemUpdateWithoutSellerDataInput!
  where: ItemWhereUniqueInput!
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: StringFilter
  CartItem: CartItemFilter
  catagory: CatagoryFilter
  colors: ColorsFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: StringFilter
  id: StringFilter
  images: ItemImageFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: IntFilter
  materials: StringFilter
  NOT: [ItemWhereInput!]
  oherFeatures: OherFeaturesFilter
  OR: [ItemWhereInput!]
  Order: OrderFilter
  otherInfo: NullableStringFilter
  overview: StringFilter
  price: FloatFilter
  reviewCount: IntFilter
  Seller: SellerWhereInput
  sellerId: NullableStringFilter
  stock: IntFilter
  tags: TagsFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: StringFilter
}

input ItemWhereUniqueInput {
  id: String
}

type Like {
  id: String!
}

input LikeCreateManyWithoutItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutItemInput!]
}

input LikeCreateManyWithoutOrderItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutOrderItemInput!]
}

input LikeCreateManyWithoutUserInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutUserInput!]
}

input LikeCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutLikesInput
  updatedAt: DateTime
  user: UserCreateOneWithoutLikesInput!
}

input LikeCreateWithoutOrderItemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutLikesInput!
  updatedAt: DateTime
  user: UserCreateOneWithoutLikesInput!
}

input LikeCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutLikesInput!
  OrderItem: OrderItemCreateOneWithoutLikesInput
  updatedAt: DateTime
}

input LikeFilter {
  every: LikeWhereInput
  none: LikeWhereInput
  some: LikeWhereInput
}

input LikeScalarWhereInput {
  AND: [LikeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [LikeScalarWhereInput!]
  OR: [LikeScalarWhereInput!]
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input LikeUpdateManyDataInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LikeUpdateManyWithoutItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutItemInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutItemInput!]
}

input LikeUpdateManyWithoutOrderItemInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutOrderItemInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input LikeUpdateManyWithoutUserInput {
  connect: [LikeWhereUniqueInput!]
  create: [LikeCreateWithoutUserInput!]
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [LikeUpdateManyWithWhereNestedInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutUserInput!]
}

input LikeUpdateManyWithWhereNestedInput {
  data: LikeUpdateManyDataInput!
  where: LikeScalarWhereInput!
}

input LikeUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutLikesInput
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutLikesInput
}

input LikeUpdateWithoutOrderItemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutLikesInput
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutLikesInput
}

input LikeUpdateWithoutUserDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutLikesInput
  OrderItem: OrderItemUpdateOneWithoutLikesInput
  updatedAt: DateTime
}

input LikeUpdateWithWhereUniqueWithoutItemInput {
  data: LikeUpdateWithoutItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithWhereUniqueWithoutOrderItemInput {
  data: LikeUpdateWithoutOrderItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithWhereUniqueWithoutUserInput {
  data: LikeUpdateWithoutUserDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutItemInput {
  create: LikeCreateWithoutItemInput!
  update: LikeUpdateWithoutItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutOrderItemInput {
  create: LikeCreateWithoutOrderItemInput!
  update: LikeUpdateWithoutOrderItemDataInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutUserInput {
  create: LikeCreateWithoutUserInput!
  update: LikeUpdateWithoutUserDataInput!
  where: LikeWhereUniqueInput!
}

input LikeWhereInput {
  AND: [LikeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [LikeWhereInput!]
  OR: [LikeWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input LikeWhereUniqueInput {
  id: String
}

type Mutation {
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

input OherFeaturesCreateManyWithoutItemInput {
  connect: [OherFeaturesWhereUniqueInput!]
  create: [OherFeaturesCreateWithoutItemInput!]
}

input OherFeaturesCreateManyWithoutOrderItemInput {
  connect: [OherFeaturesWhereUniqueInput!]
  create: [OherFeaturesCreateWithoutOrderItemInput!]
}

input OherFeaturesCreateWithoutItemInput {
  id: String
  OrderItem: OrderItemCreateOneWithoutOherFeaturesInput
  text: String!
}

input OherFeaturesCreateWithoutOrderItemInput {
  id: String
  item: ItemCreateOneWithoutOherFeaturesInput!
  text: String!
}

input OherFeaturesFilter {
  every: OherFeaturesWhereInput
  none: OherFeaturesWhereInput
  some: OherFeaturesWhereInput
}

input OherFeaturesScalarWhereInput {
  AND: [OherFeaturesScalarWhereInput!]
  id: StringFilter
  itemId: StringFilter
  NOT: [OherFeaturesScalarWhereInput!]
  OR: [OherFeaturesScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
}

input OherFeaturesUpdateManyDataInput {
  id: String
  text: String
}

input OherFeaturesUpdateManyWithoutItemInput {
  connect: [OherFeaturesWhereUniqueInput!]
  create: [OherFeaturesCreateWithoutItemInput!]
  delete: [OherFeaturesWhereUniqueInput!]
  deleteMany: [OherFeaturesScalarWhereInput!]
  disconnect: [OherFeaturesWhereUniqueInput!]
  set: [OherFeaturesWhereUniqueInput!]
  update: [OherFeaturesUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [OherFeaturesUpdateManyWithWhereNestedInput!]
  upsert: [OherFeaturesUpsertWithWhereUniqueWithoutItemInput!]
}

input OherFeaturesUpdateManyWithoutOrderItemInput {
  connect: [OherFeaturesWhereUniqueInput!]
  create: [OherFeaturesCreateWithoutOrderItemInput!]
  delete: [OherFeaturesWhereUniqueInput!]
  deleteMany: [OherFeaturesScalarWhereInput!]
  disconnect: [OherFeaturesWhereUniqueInput!]
  set: [OherFeaturesWhereUniqueInput!]
  update: [OherFeaturesUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [OherFeaturesUpdateManyWithWhereNestedInput!]
  upsert: [OherFeaturesUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input OherFeaturesUpdateManyWithWhereNestedInput {
  data: OherFeaturesUpdateManyDataInput!
  where: OherFeaturesScalarWhereInput!
}

input OherFeaturesUpdateWithoutItemDataInput {
  id: String
  OrderItem: OrderItemUpdateOneWithoutOherFeaturesInput
  text: String
}

input OherFeaturesUpdateWithoutOrderItemDataInput {
  id: String
  item: ItemUpdateOneRequiredWithoutOherFeaturesInput
  text: String
}

input OherFeaturesUpdateWithWhereUniqueWithoutItemInput {
  data: OherFeaturesUpdateWithoutItemDataInput!
  where: OherFeaturesWhereUniqueInput!
}

input OherFeaturesUpdateWithWhereUniqueWithoutOrderItemInput {
  data: OherFeaturesUpdateWithoutOrderItemDataInput!
  where: OherFeaturesWhereUniqueInput!
}

input OherFeaturesUpsertWithWhereUniqueWithoutItemInput {
  create: OherFeaturesCreateWithoutItemInput!
  update: OherFeaturesUpdateWithoutItemDataInput!
  where: OherFeaturesWhereUniqueInput!
}

input OherFeaturesUpsertWithWhereUniqueWithoutOrderItemInput {
  create: OherFeaturesCreateWithoutOrderItemInput!
  update: OherFeaturesUpdateWithoutOrderItemDataInput!
  where: OherFeaturesWhereUniqueInput!
}

input OherFeaturesWhereInput {
  AND: [OherFeaturesWhereInput!]
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [OherFeaturesWhereInput!]
  OR: [OherFeaturesWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
}

input OherFeaturesWhereUniqueInput {
  id: String
}

input OrderCreateManyWithoutItemInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemInput!]
}

input OrderCreateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutUserInput!]
}

input OrderCreatestatusInput {
  set: [OrderStatus!]
}

input OrderCreateWithoutItemInput {
  charge: String!
  createdAt: DateTime
  id: String
  status: OrderCreatestatusInput
  total: Int!
  updatedAt: DateTime
  user: UserCreateOneWithoutOrderInput!
}

input OrderCreateWithoutUserInput {
  charge: String!
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutOrderInput!
  status: OrderCreatestatusInput
  total: Int!
  updatedAt: DateTime
}

input OrderFilter {
  every: OrderWhereInput
  none: OrderWhereInput
  some: OrderWhereInput
}

input OrderItemCreateOneWithoutCatagoryInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutCatagoryInput
}

input OrderItemCreateOneWithoutColorsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutColorsInput
}

input OrderItemCreateOneWithoutImagesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutImagesInput
}

input OrderItemCreateOneWithoutItemReviewInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutItemReviewInput
}

input OrderItemCreateOneWithoutLikesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutLikesInput
}

input OrderItemCreateOneWithoutOherFeaturesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutOherFeaturesInput
}

input OrderItemCreateOneWithoutTagsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutTagsInput
}

input OrderItemCreateWithoutCatagoryInput {
  beforeDiscountPrice: Float!
  brand: String
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutColorsInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutImagesInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutItemReviewInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutLikesInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutOherFeaturesInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  tags: TagsCreateManyWithoutOrderItemInput
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemCreateWithoutTagsInput {
  beforeDiscountPrice: Float!
  brand: String
  catagory: CatagoryCreateManyWithoutOrderItemInput
  colors: ColorsCreateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageCreateManyWithoutOrderItemInput
  itemReview: ReviewCreateManyWithoutOrderItemInput
  likes: LikeCreateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesCreateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float!
  stock: Int
  title: String!
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateOneWithoutCatagoryInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutCatagoryInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutCatagoryDataInput
  upsert: OrderItemUpsertWithoutCatagoryInput
}

input OrderItemUpdateOneWithoutColorsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutColorsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutColorsDataInput
  upsert: OrderItemUpsertWithoutColorsInput
}

input OrderItemUpdateOneWithoutImagesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutImagesInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutImagesDataInput
  upsert: OrderItemUpsertWithoutImagesInput
}

input OrderItemUpdateOneWithoutItemReviewInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutItemReviewInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutItemReviewDataInput
  upsert: OrderItemUpsertWithoutItemReviewInput
}

input OrderItemUpdateOneWithoutLikesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutLikesInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutLikesDataInput
  upsert: OrderItemUpsertWithoutLikesInput
}

input OrderItemUpdateOneWithoutOherFeaturesInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutOherFeaturesInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutOherFeaturesDataInput
  upsert: OrderItemUpsertWithoutOherFeaturesInput
}

input OrderItemUpdateOneWithoutTagsInput {
  connect: OrderItemWhereUniqueInput
  create: OrderItemCreateWithoutTagsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderItemUpdateWithoutTagsDataInput
  upsert: OrderItemUpsertWithoutTagsInput
}

input OrderItemUpdateWithoutCatagoryDataInput {
  beforeDiscountPrice: Float
  brand: String
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutColorsDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutImagesDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutItemReviewDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutLikesDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutOherFeaturesDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  tags: TagsUpdateManyWithoutOrderItemInput
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpdateWithoutTagsDataInput {
  beforeDiscountPrice: Float
  brand: String
  catagory: CatagoryUpdateManyWithoutOrderItemInput
  colors: ColorsUpdateManyWithoutOrderItemInput
  createdAt: DateTime
  description: String
  dimensions: String
  id: String
  images: ItemImageUpdateManyWithoutOrderItemInput
  itemReview: ReviewUpdateManyWithoutOrderItemInput
  likes: LikeUpdateManyWithoutOrderItemInput
  materials: String
  oherFeatures: OherFeaturesUpdateManyWithoutOrderItemInput
  otherInfo: String
  overview: String
  price: Float
  stock: Int
  title: String
  updatedAt: DateTime
  videoLink: String
  weight: String
}

input OrderItemUpsertWithoutCatagoryInput {
  create: OrderItemCreateWithoutCatagoryInput!
  update: OrderItemUpdateWithoutCatagoryDataInput!
}

input OrderItemUpsertWithoutColorsInput {
  create: OrderItemCreateWithoutColorsInput!
  update: OrderItemUpdateWithoutColorsDataInput!
}

input OrderItemUpsertWithoutImagesInput {
  create: OrderItemCreateWithoutImagesInput!
  update: OrderItemUpdateWithoutImagesDataInput!
}

input OrderItemUpsertWithoutItemReviewInput {
  create: OrderItemCreateWithoutItemReviewInput!
  update: OrderItemUpdateWithoutItemReviewDataInput!
}

input OrderItemUpsertWithoutLikesInput {
  create: OrderItemCreateWithoutLikesInput!
  update: OrderItemUpdateWithoutLikesDataInput!
}

input OrderItemUpsertWithoutOherFeaturesInput {
  create: OrderItemCreateWithoutOherFeaturesInput!
  update: OrderItemUpdateWithoutOherFeaturesDataInput!
}

input OrderItemUpsertWithoutTagsInput {
  create: OrderItemCreateWithoutTagsInput!
  update: OrderItemUpdateWithoutTagsDataInput!
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  beforeDiscountPrice: FloatFilter
  brand: StringFilter
  catagory: CatagoryFilter
  colors: ColorsFilter
  createdAt: DateTimeFilter
  description: StringFilter
  dimensions: StringFilter
  id: StringFilter
  images: ItemImageFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  materials: StringFilter
  NOT: [OrderItemWhereInput!]
  oherFeatures: OherFeaturesFilter
  OR: [OrderItemWhereInput!]
  otherInfo: NullableStringFilter
  overview: StringFilter
  price: FloatFilter
  stock: IntFilter
  tags: TagsFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  videoLink: NullableStringFilter
  weight: StringFilter
}

input OrderItemWhereUniqueInput {
  id: String
}

input OrderScalarWhereInput {
  AND: [OrderScalarWhereInput!]
  charge: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [OrderScalarWhereInput!]
  OR: [OrderScalarWhereInput!]
  total: IntFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

enum OrderStatus {
  APPROVED
  DELIVERED
  ON_THE_WAY
  ONHOLD
  PENDING
}

input OrderUpdateManyDataInput {
  charge: String
  createdAt: DateTime
  id: String
  status: OrderUpdatestatusInput
  total: Int
  updatedAt: DateTime
}

input OrderUpdateManyWithoutItemInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutItemInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutItemInput!]
}

input OrderUpdateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  create: [OrderCreateWithoutUserInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutUserInput!]
}

input OrderUpdateManyWithWhereNestedInput {
  data: OrderUpdateManyDataInput!
  where: OrderScalarWhereInput!
}

input OrderUpdatestatusInput {
  set: [OrderStatus!]
}

input OrderUpdateWithoutItemDataInput {
  charge: String
  createdAt: DateTime
  id: String
  status: OrderUpdatestatusInput
  total: Int
  updatedAt: DateTime
  user: UserUpdateOneRequiredWithoutOrderInput
}

input OrderUpdateWithoutUserDataInput {
  charge: String
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutOrderInput
  status: OrderUpdatestatusInput
  total: Int
  updatedAt: DateTime
}

input OrderUpdateWithWhereUniqueWithoutItemInput {
  data: OrderUpdateWithoutItemDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithWhereUniqueWithoutUserInput {
  data: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutItemInput {
  create: OrderCreateWithoutItemInput!
  update: OrderUpdateWithoutItemDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutUserInput {
  create: OrderCreateWithoutUserInput!
  update: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  charge: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  total: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input OrderWhereUniqueInput {
  id: String
}

enum Permission {
  ADD_ITEM
  DELETE_ITEM
  EDIT_ITEM
  UPRDATE_PERMISSION
}

type Query {
  """Current User"""
  CurrentUser: User
}

input ReviewCreateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
}

input ReviewCreateManyWithoutItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutItemInput!]
}

input ReviewCreateManyWithoutOrderItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutOrderItemInput!]
}

input ReviewCreateWithoutAuthorInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutItemReviewInput!
  OrderItem: OrderItemCreateOneWithoutItemReviewInput
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewCreateWithoutItemInput {
  author: UserCreateOneWithoutItemReviewInput!
  createdAt: DateTime
  id: String
  OrderItem: OrderItemCreateOneWithoutItemReviewInput
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewCreateWithoutOrderItemInput {
  author: UserCreateOneWithoutItemReviewInput!
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutItemReviewInput!
  rating: Float
  text: String!
  updatedAt: DateTime
}

input ReviewFilter {
  every: ReviewWhereInput
  none: ReviewWhereInput
  some: ReviewWhereInput
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput!]
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  itemId: StringFilter
  NOT: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  orderItemId: NullableStringFilter
  rating: FloatFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ReviewUpdateManyDataInput {
  createdAt: DateTime
  id: String
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutAuthorInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReviewUpdateManyWithoutItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutItemInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutItemInput!]
}

input ReviewUpdateManyWithoutOrderItemInput {
  connect: [ReviewWhereUniqueInput!]
  create: [ReviewCreateWithoutOrderItemInput!]
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  data: ReviewUpdateManyDataInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutItemReviewInput
  OrderItem: OrderItemUpdateOneWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithoutItemDataInput {
  author: UserUpdateOneRequiredWithoutItemReviewInput
  createdAt: DateTime
  id: String
  OrderItem: OrderItemUpdateOneWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithoutOrderItemDataInput {
  author: UserUpdateOneRequiredWithoutItemReviewInput
  createdAt: DateTime
  id: String
  item: ItemUpdateOneRequiredWithoutItemReviewInput
  rating: Float
  text: String
  updatedAt: DateTime
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutItemInput {
  data: ReviewUpdateWithoutItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutOrderItemInput {
  data: ReviewUpdateWithoutOrderItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutItemInput {
  create: ReviewCreateWithoutItemInput!
  update: ReviewUpdateWithoutItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutOrderItemInput {
  create: ReviewCreateWithoutOrderItemInput!
  update: ReviewUpdateWithoutOrderItemDataInput!
  where: ReviewWhereUniqueInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput!]
  author: UserWhereInput
  authorId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  rating: FloatFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input ReviewWhereUniqueInput {
  id: String
}

enum Role {
  ADMIN
  SELLER
  USER
}

input SellerCreateBrandInput {
  set: [String!]
}

input SellerCreateOneWithoutItemsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutItemsInput
}

input SellerCreateOneWithoutPickupLocationsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutPickupLocationsInput
}

input SellerCreatepermissionsInput {
  set: [Permission!]
}

input SellerCreatephoneInput {
  set: [String!]
}

input SellerCreateWithoutItemsInput {
  Brand: SellerCreateBrandInput
  confirmPassword: String!
  createdAt: DateTime
  email: String!
  EmailIsVerified: Boolean
  EmailVarificationHash: String!
  id: String
  name: String!
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: SellerCreatepermissionsInput
  phone: SellerCreatephoneInput
  PickupLocations: AddressCreateManyWithoutSellerInput
  role: Role
  sellerIdentification: String!
  SellerItemsCout: Int!
  sellerNationality: String!
  storeName: String!
  updatedAt: DateTime
}

input SellerCreateWithoutPickupLocationsInput {
  Brand: SellerCreateBrandInput
  confirmPassword: String!
  createdAt: DateTime
  email: String!
  EmailIsVerified: Boolean
  EmailVarificationHash: String!
  id: String
  items: ItemCreateManyWithoutSellerInput
  name: String!
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: SellerCreatepermissionsInput
  phone: SellerCreatephoneInput
  role: Role
  sellerIdentification: String!
  SellerItemsCout: Int!
  sellerNationality: String!
  storeName: String!
  updatedAt: DateTime
}

input SellerUpdateBrandInput {
  set: [String!]
}

input SellerUpdateOneWithoutItemsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  update: SellerUpdateWithoutItemsDataInput
  upsert: SellerUpsertWithoutItemsInput
}

input SellerUpdateOneWithoutPickupLocationsInput {
  connect: SellerWhereUniqueInput
  create: SellerCreateWithoutPickupLocationsInput
  delete: Boolean
  disconnect: Boolean
  update: SellerUpdateWithoutPickupLocationsDataInput
  upsert: SellerUpsertWithoutPickupLocationsInput
}

input SellerUpdatepermissionsInput {
  set: [Permission!]
}

input SellerUpdatephoneInput {
  set: [String!]
}

input SellerUpdateWithoutItemsDataInput {
  Brand: SellerUpdateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: SellerUpdatepermissionsInput
  phone: SellerUpdatephoneInput
  PickupLocations: AddressUpdateManyWithoutSellerInput
  role: Role
  sellerIdentification: String
  SellerItemsCout: Int
  sellerNationality: String
  storeName: String
  updatedAt: DateTime
}

input SellerUpdateWithoutPickupLocationsDataInput {
  Brand: SellerUpdateBrandInput
  confirmPassword: String
  createdAt: DateTime
  email: String
  EmailIsVerified: Boolean
  EmailVarificationHash: String
  id: String
  items: ItemUpdateManyWithoutSellerInput
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: SellerUpdatepermissionsInput
  phone: SellerUpdatephoneInput
  role: Role
  sellerIdentification: String
  SellerItemsCout: Int
  sellerNationality: String
  storeName: String
  updatedAt: DateTime
}

input SellerUpsertWithoutItemsInput {
  create: SellerCreateWithoutItemsInput!
  update: SellerUpdateWithoutItemsDataInput!
}

input SellerUpsertWithoutPickupLocationsInput {
  create: SellerCreateWithoutPickupLocationsInput!
  update: SellerUpdateWithoutPickupLocationsDataInput!
}

input SellerWhereInput {
  AND: [SellerWhereInput!]
  confirmPassword: StringFilter
  createdAt: DateTimeFilter
  email: StringFilter
  EmailIsVerified: BooleanFilter
  EmailVarificationHash: StringFilter
  id: StringFilter
  items: ItemFilter
  name: StringFilter
  NOT: [SellerWhereInput!]
  OR: [SellerWhereInput!]
  password: StringFilter
  PasswordResetToken: StringFilter
  PasswordResetTokenExpiry: FloatFilter
  PickupLocations: AddressFilter
  role: Role
  sellerIdentification: StringFilter
  SellerItemsCout: IntFilter
  sellerNationality: StringFilter
  storeName: StringFilter
  updatedAt: DateTimeFilter
}

input SellerWhereUniqueInput {
  email: String
  id: String
  phone: [String!]
  sellerIdentification: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

input TagsCreateManyWithoutItemInput {
  connect: [TagsWhereUniqueInput!]
  create: [TagsCreateWithoutItemInput!]
}

input TagsCreateManyWithoutOrderItemInput {
  connect: [TagsWhereUniqueInput!]
  create: [TagsCreateWithoutOrderItemInput!]
}

input TagsCreateWithoutItemInput {
  id: String
  OrderItem: OrderItemCreateOneWithoutTagsInput
  text: String!
}

input TagsCreateWithoutOrderItemInput {
  id: String
  item: ItemCreateOneWithoutTagsInput!
  text: String!
}

input TagsFilter {
  every: TagsWhereInput
  none: TagsWhereInput
  some: TagsWhereInput
}

input TagsScalarWhereInput {
  AND: [TagsScalarWhereInput!]
  id: StringFilter
  itemId: StringFilter
  NOT: [TagsScalarWhereInput!]
  OR: [TagsScalarWhereInput!]
  orderItemId: NullableStringFilter
  text: StringFilter
}

input TagsUpdateManyDataInput {
  id: String
  text: String
}

input TagsUpdateManyWithoutItemInput {
  connect: [TagsWhereUniqueInput!]
  create: [TagsCreateWithoutItemInput!]
  delete: [TagsWhereUniqueInput!]
  deleteMany: [TagsScalarWhereInput!]
  disconnect: [TagsWhereUniqueInput!]
  set: [TagsWhereUniqueInput!]
  update: [TagsUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [TagsUpdateManyWithWhereNestedInput!]
  upsert: [TagsUpsertWithWhereUniqueWithoutItemInput!]
}

input TagsUpdateManyWithoutOrderItemInput {
  connect: [TagsWhereUniqueInput!]
  create: [TagsCreateWithoutOrderItemInput!]
  delete: [TagsWhereUniqueInput!]
  deleteMany: [TagsScalarWhereInput!]
  disconnect: [TagsWhereUniqueInput!]
  set: [TagsWhereUniqueInput!]
  update: [TagsUpdateWithWhereUniqueWithoutOrderItemInput!]
  updateMany: [TagsUpdateManyWithWhereNestedInput!]
  upsert: [TagsUpsertWithWhereUniqueWithoutOrderItemInput!]
}

input TagsUpdateManyWithWhereNestedInput {
  data: TagsUpdateManyDataInput!
  where: TagsScalarWhereInput!
}

input TagsUpdateWithoutItemDataInput {
  id: String
  OrderItem: OrderItemUpdateOneWithoutTagsInput
  text: String
}

input TagsUpdateWithoutOrderItemDataInput {
  id: String
  item: ItemUpdateOneRequiredWithoutTagsInput
  text: String
}

input TagsUpdateWithWhereUniqueWithoutItemInput {
  data: TagsUpdateWithoutItemDataInput!
  where: TagsWhereUniqueInput!
}

input TagsUpdateWithWhereUniqueWithoutOrderItemInput {
  data: TagsUpdateWithoutOrderItemDataInput!
  where: TagsWhereUniqueInput!
}

input TagsUpsertWithWhereUniqueWithoutItemInput {
  create: TagsCreateWithoutItemInput!
  update: TagsUpdateWithoutItemDataInput!
  where: TagsWhereUniqueInput!
}

input TagsUpsertWithWhereUniqueWithoutOrderItemInput {
  create: TagsCreateWithoutOrderItemInput!
  update: TagsUpdateWithoutOrderItemDataInput!
  where: TagsWhereUniqueInput!
}

input TagsWhereInput {
  AND: [TagsWhereInput!]
  id: StringFilter
  item: ItemWhereInput
  itemId: StringFilter
  NOT: [TagsWhereInput!]
  OR: [TagsWhereInput!]
  OrderItem: OrderItemWhereInput
  orderItemId: NullableStringFilter
  text: StringFilter
}

input TagsWhereUniqueInput {
  id: String
}

type User {
  id: String!
}

input UserCreateOneWithoutAddressInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAddressInput
}

input UserCreateOneWithoutCartInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCartInput
}

input UserCreateOneWithoutItemReviewInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemReviewInput
}

input UserCreateOneWithoutLikesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLikesInput
}

input UserCreateOneWithoutOrderInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOrderInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutAddressInput {
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int!
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: UserCreatepermissionsInput
  reviewCount: Int!
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutCartInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int!
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: UserCreatepermissionsInput
  reviewCount: Int!
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutItemReviewInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int!
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: UserCreatepermissionsInput
  reviewCount: Int!
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutLikesInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likesCount: Int!
  name: String!
  Order: OrderCreateManyWithoutUserInput
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: UserCreatepermissionsInput
  reviewCount: Int!
  role: Role
  updatedAt: DateTime
}

input UserCreateWithoutOrderInput {
  address: AddressCreateManyWithoutUserInput
  avatar: String
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemReview: ReviewCreateManyWithoutAuthorInput
  likes: LikeCreateManyWithoutUserInput
  likesCount: Int!
  name: String!
  password: String!
  PasswordResetToken: String!
  PasswordResetTokenExpiry: Float!
  permissions: UserCreatepermissionsInput
  reviewCount: Int!
  role: Role
  updatedAt: DateTime
}

input UserUpdateInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateOneRequiredWithoutCartInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCartInput
  update: UserUpdateWithoutCartDataInput
  upsert: UserUpsertWithoutCartInput
}

input UserUpdateOneRequiredWithoutItemReviewInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemReviewInput
  update: UserUpdateWithoutItemReviewDataInput
  upsert: UserUpsertWithoutItemReviewInput
}

input UserUpdateOneRequiredWithoutLikesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLikesInput
  update: UserUpdateWithoutLikesDataInput
  upsert: UserUpsertWithoutLikesInput
}

input UserUpdateOneRequiredWithoutOrderInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOrderInput
  update: UserUpdateWithoutOrderDataInput
  upsert: UserUpsertWithoutOrderInput
}

input UserUpdateOneWithoutAddressInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAddressInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutAddressDataInput
  upsert: UserUpsertWithoutAddressInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutAddressDataInput {
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutCartDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutItemReviewDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutLikesDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likesCount: Int
  name: String
  Order: OrderUpdateManyWithoutUserInput
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpdateWithoutOrderDataInput {
  address: AddressUpdateManyWithoutUserInput
  avatar: String
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemReview: ReviewUpdateManyWithoutAuthorInput
  likes: LikeUpdateManyWithoutUserInput
  likesCount: Int
  name: String
  password: String
  PasswordResetToken: String
  PasswordResetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  reviewCount: Int
  role: Role
  updatedAt: DateTime
}

input UserUpsertWithoutAddressInput {
  create: UserCreateWithoutAddressInput!
  update: UserUpdateWithoutAddressDataInput!
}

input UserUpsertWithoutCartInput {
  create: UserCreateWithoutCartInput!
  update: UserUpdateWithoutCartDataInput!
}

input UserUpsertWithoutItemReviewInput {
  create: UserCreateWithoutItemReviewInput!
  update: UserUpdateWithoutItemReviewDataInput!
}

input UserUpsertWithoutLikesInput {
  create: UserCreateWithoutLikesInput!
  update: UserUpdateWithoutLikesDataInput!
}

input UserUpsertWithoutOrderInput {
  create: UserCreateWithoutOrderInput!
  update: UserUpdateWithoutOrderDataInput!
}

input UserWhereInput {
  address: AddressFilter
  AND: [UserWhereInput!]
  avatar: NullableStringFilter
  cart: CartItemFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  itemReview: ReviewFilter
  likes: LikeFilter
  likesCount: IntFilter
  name: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Order: OrderFilter
  password: StringFilter
  PasswordResetToken: StringFilter
  PasswordResetTokenExpiry: FloatFilter
  reviewCount: IntFilter
  role: Role
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
